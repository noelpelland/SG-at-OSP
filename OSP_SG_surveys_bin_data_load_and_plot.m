% Seaglider time series at OSP:
% Bin-average, cycle-average data.
% Noel Pelland
% nap2@u.washington.edu
% noel.pelland@noaa.gov

% THIS CODE USES DATA AVAILABLE FROM THE UW RESEARCHWORKS ARCHIVE AT:
% http://hdl.handle.net/1773/41656

% Pelland/Eriksen/Cronin [2016] refers to: http://dx.doi.org/10.1002/2016JC011920
% Pelland [2015] refers to: http://hdl.handle.net/1773/35285
% Pelland et al. [in prep] refers to:
% Pelland NA, Eriksen CC, Emerson SR, Cronin MF "Seaglider surveys at Ocean
% Station Papa: Oxygen kinematics and upper-ocean metabolism." Manuscript
% in preparation to be submitted to JGR March/April 2018.

clear all;close all;fclose all;

% directory in which the bin-average and DAC data are stored
bin_data_dir = '~/Desktop/figs_chapter_3/bin_avg_data_archiving/'; %%%% <--- CHANGE to directory on your machine
% directory in which the spreadsheet with ML-average Winkler o2
% samples from ship visits to OSP is stored
o2_crosscal_sprdsht_dir = '~/Desktop/figs_chapter_3/bin_avg_data_archiving/'; %%%% <--- CHANGE to directory on your machine

% run cells individually in "cell mode" for best results
% otherwise, remove or comment the "close all" statements below, or only the last
% figure generated by this file will be shown

%% LOAD DATA

% change directory to where bin-average and DAC data are stored
cd(bin_data_dir)

% load data structures
scalar_data_fid = netcdf.open('SG_at_osp_bin_avg_data.nc','NC_NOWRITE');
scalar_data_f_info = ncinfo('SG_at_osp_bin_avg_data.nc');
n_vars = length(scalar_data_f_info.Variables); % includes first column (dummy variable)
bin_var_names = cell(1,n_vars-1);
bin_var_descriptions = cell(1,n_vars-1);
n_bins = scalar_data_f_info.Dimensions(1).Length;
% pre-allocate
data_mat = zeros(n_bins,n_vars-1)*NaN;
for nvi = 2:n_vars % first variable is just bin or row number
    data_mat(:,nvi-1) = netcdf.getVar(scalar_data_fid,nvi-1);
    % nvi-1 on right-hand side is due to the fact that netcdf indexing is reduced by 1 (i.e., first variable has index of 0)
    bin_var_names{nvi-1} = netcdf.inqVar(scalar_data_fid,nvi-1);
    bin_var_descriptions{nvi-1} = netcdf.getAtt(scalar_data_fid,nvi-1,'description');
end
netcdf.close(scalar_data_fid);
deployment = floor(data_mat(:,1)/1000)+1; % construct deployment ind


dac_fid = netcdf.open('SG_at_osp_DAC_data.nc','NC_NOWRITE');
dac_f_info = ncinfo('SG_at_osp_DAC_data.nc');
n_vars = length(dac_f_info.Variables); % includes first column (dummy variable)
dac_var_names = cell(1,n_vars-1);
dac_var_descriptions = cell(1,n_vars-1);
n_cycs = dac_f_info.Dimensions(1).Length;
% pre-allocate
dac_tot = zeros(n_cycs,n_vars-1);
for nvi = 2:n_vars % first variable is just cycle or row number
    dac_tot(:,nvi-1) = netcdf.getVar(dac_fid,nvi-1);
    dac_var_names{nvi-1} = netcdf.inqVar(dac_fid,nvi-1);
    dac_var_descriptions{nvi-1} = netcdf.getAtt(dac_fid,nvi-1,'description');
end    
dac_deployment = floor(dac_tot(:,1)/1000)+1;
netcdf.close(dac_fid);

    % estimate glider x/y position (km) relative to P26
        ref_lat = 50;
        ref_lon = -145;
        glider_x = 1.852*60*(data_mat(:,4)-ref_lon).*cosd(ref_lat);
        glider_y = 1.852*60*(data_mat(:,5)-ref_lat);
    
    % Center position: estimated mean daily mooring position in KM 
    % relative to ref_lat, ref_lon above from 10 June 2009 to 16
    % June 2010
    % estimated using position data downloaded from
    % https://www.pmel.noaa.gov/ocs/data/disdel/index.html
        cent_x = 12.6536;
        cent_y = 14.2920;
        glider_xpr = glider_x - cent_x;
        glider_ypr = glider_y - cent_y;
        
    
%% RECREATE FIG. 2A FROM PELLAND/ERIKSEN/CRONIN [2016]

    close all
    
% lat/lon of the vehicle targets used in the surveys:
    SW_lat = 49+54.011/60;
    SW_lon = -145-11.94/60;
    SE_lat = SW_lat;
    SE_lon = -144-29.83/60;
    NW_lon = SW_lon;
    NW_lat = 50+21.01/60;
    NE_lon = SE_lon;
    NE_lat = NW_lat;
    
% create figure 2a replica
    figure('units','inches','position',[1 1 4.2 4.2]);
    ax1 = axes('units','inches','position',[0.7 0.6 3 3]);
    hold(ax1,'on')
    for dpli = 1:3
        these_dac_rows = dac_deployment == dpli;
        line(dac_tot(these_dac_rows,3),dac_tot(these_dac_rows,4),'marker','.','color',[0.7 0.7 0.7]);
    end
    y_extent = 70/(1.852*60);
    x_extent = 70/(1.852*60*cosd(50));
    set(gca,'xlim',[-1/2 1/2]*x_extent+(cent_x/(1.852*60*cosd(50)))-145,'ylim',[-1/2 1/2]*y_extent+(cent_y/(1.852*60))+50)
    grid on
    ax2 = axes('units','inches','position',get(ax1,'position'),'color','none','xcolor','r','xaxislocation','top','yaxislocation',...
        'right','ycolor','r');
    y_lim_km = [-35 35];
    x_lim_km = [-35 35];
    set(ax2,'xlim',x_lim_km,'ylim',y_lim_km,'xtick',-30:10:30,'ytick',-30:10:30)
    set(gcf,'currentaxes',ax1);
    line(NW_lon,NW_lat,'marker','x','color','k')
    line(NE_lon,NE_lat,'marker','x','color','k')
    line(SW_lon,SW_lat,'marker','x','color','k')
    line(SE_lon,SE_lat,'marker','x','color','k')
    set(gcf,'currentaxes',ax2)
    line(0,0,'marker','o','markerfacecolor',[0 0.7 0],'markeredgecolor','k')
    text(2,2,'\bfMoor [2009]','color',[0 0.7 0])
    line(-cent_x,-cent_y,'marker','o','markerfacecolor','r','markeredgecolor','k')
    text(2-cent_x,2-cent_y,'\bfP26 [OSP]','color','r')
    text(-22-cent_x,-12-cent_y,'\bfSW','color','k')
    text(-22-cent_x,35-cent_y,'\bfNW','color','k')
    text(38-cent_x,-12-cent_y,'\bfSE','color','k')
    text(38-cent_x,40-cent_y,'\bfNE','color','k')
    set(gcf,'currentaxes',ax1)
    % nominal mooring position
    line(-144-53/60,50+3/60,'marker','o','markerfacecolor',[0 0.7 0],'markeredgecolor','k')    
    % ADCP lat/lon listed for 2009 deployment year in processed .mat files for individual
    % instruments supplied by John Mickett (+Matthew Alford, Jody Klymak)
    line(-144.9710,50.1147,'marker','o','markerfacecolor',[0 0.4 1],'markeredgecolor','k')    
    text(-145.01,50.125,{'\bfADCP';'[2008-09]'},'color',[0 0.4 1],'horizontalalignment','right')
    these_xtick = get(gca,'xtick');
    set(gca,'xticklabel',num2str(-these_xtick'))
    xlabel('Longitude [\circW]')
    ylabel('Latitude [\circN]')
    set(gcf,'currentaxes',ax2)
    text(7/60*1.852*60*cosd(50)+2-cent_x,3/60*1.852*60+2-cent_y,'\bfMoor [2008]','color',[0 0.7 0])
    xlabel('x [km]','units','inches')
    yl1 = ylabel('y [km]','units','inches','position',[3.2 1.5]);
    line([-20 -20]-1-cent_x,[20 5]-cent_y,'color','k')
    patch([-22 -20 -20]-1-cent_x,[11 11 5]-cent_y,zeros(1,3),'facecolor','k','edgecolor','none','clipping','off')

    line([-15 0]*cosd(45)+25-cent_x,[-15 0]*sind(45)+35-cent_y,'color','k')
    phi_tri = atand(2/6);
    patch([-6*cosd(45-phi_tri) -6*cosd(45) 0]+25-cent_x,[-6*sind(45-phi_tri) -6*sind(45) 0]+35-cent_y,[0 0 0],'facecolor','k','edgecolor','none')

    text(-31,31,'\bf(a)\rm Survey Pattern')
    getpos = get(gcf,'position');
    set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)]);
    
%% RECREATE FIG. 3 FROM PELLAND/ERIKSEN/CRONIN [2016]

close all
% what month/year/depth do you want to plot?
    mo_sel = 7;
    yr_sel = 2008;
    dep_sel = 120;
% date vector
    t_vec = datevec(data_mat(:,3));
    
    % select data within this month/year/depth bin
    in_mo_bin = data_mat(:,6) == dep_sel & ...
        t_vec(:,1) == yr_sel & t_vec(:,2) == mo_sel;
    % find which casts have data in this bin
    casts_in_bin = unique(data_mat(in_mo_bin,1:2),'rows');  
    T_xyt_bin_avg = [data_mat(in_mo_bin,11) glider_xpr(in_mo_bin) glider_ypr(in_mo_bin) data_mat(in_mo_bin,3)];
    
    % perform least-squares regression fit
    % as function of x, y, t', t'^2
    good_ind = ~isnan(T_xyt_bin_avg(:,1));
    b_vec = T_xyt_bin_avg(good_ind,1);    
    % (t' = t - [15th of that month])
    t_pr = T_xyt_bin_avg(good_ind,4) - datenum([yr_sel mo_sel 15]);
    t_pr2 = t_pr.^2;
    % design matrix
    X_mat = [ones(size(t_pr)) T_xyt_bin_avg(good_ind,2:3) t_pr t_pr2];
    % A_est = vector of least-squares fit coefficients
    A_est = (X_mat'*X_mat)\(X_mat'*b_vec);
    % fitted values
    T_hat = X_mat*A_est;
    
% create figure
    figure('units','inches','position',[1 1 5 8])
    % T vs x,y
    ax1 = axes('units','inches','position',[0.6 0.5 4 4]);
    plot(X_mat(:,2),X_mat(:,3),'color',[0.7 0.7 0.7],'marker','.')
    hold(ax1,'on')
    scatter(X_mat(:,2),X_mat(:,3),15,b_vec,'filled')
    grid on
    set(gca,'xlim',[-30 30],'ylim',[-30 30])
    xlabel('x [km]')
    ylabel('y [km]')
    colormap jet
    
    % T vs t
    ax2 = axes('units','inches','position',[0.6 6.5 4 1.2]);
    set(gcf,'currentaxes',ax2)
    line(T_xyt_bin_avg(good_ind,4),b_vec,'marker','.','color','k')
    line(T_xyt_bin_avg(good_ind,4),T_hat,'color','r','linestyle','--')
    set(gca,'xlim',[datenum([yr_sel mo_sel 1])-1 datenum([yr_sel mo_sel+1 1])+1])
    datetick('x','ddmmm','keeplimits','keepticks')
    
    % (x,y) vs t
    ax3 = axes('units','inches','position',[0.6 4.9 4 1.2]);
    plot(T_xyt_bin_avg(good_ind,4),T_xyt_bin_avg(good_ind,2),'color','k','marker','.')
    set(gca,'xlim',get(ax2,'xlim'),'xtick',get(ax2,'xtick'),'ylim',[-35 35])
    hold on
    plot(T_xyt_bin_avg(good_ind,4),T_xyt_bin_avg(good_ind,3),'color',ones(1,3)*0.7,'marker','.')
    datetick('x','ddmmm','keeplimits','keepticks')
    
    set(gcf,'currentaxes',ax1)
    plot([0 0.5/50]*50*20,[0 0],'color','k','linestyle','--')
    plot([0 0],[0 0.5/50]*50*20,'color','k','linestyle','--')
    text(0.5*20+1,0,{'Eastward';'gradient'},'color',ones(1,3)*0.3,'fontsize',7)
    text(0,0.5*20+1,{'Northward';'gradient'},'color',ones(1,3)*0.3,'fontsize',7,'rotation',90)
    quiver(0,0,[A_est(2)]*50*20,[A_est(3)]*50*20,'color','k','linewidth',1.5)
    plot(0,0,'marker','.','color','k','markersize',20)
                            
    text(A_est(2)*50*20-2,A_est(3)*50*20-3,...
        '$$\nabla \theta = B \hat{\imath} + C \hat{\jmath}$$',...
        'interpreter','latex')
    text(1-cent_x,-8-cent_y,{['$$B = ' num2str(A_est(2)*50,'%1.4f') '^{\circ}$$C per 50 km'];...
        ['$$C = ' num2str(A_est(3)*50,'%1.4f') '^{\circ}$$C per 50 km']},'interpreter','latex')
    cb1 = colorbar('location','eastoutside','units','inches','position',[5.7 0.6 0.2 5]);
    
    ylabel(cb1,'\circC')
    set(gcf,'currentaxes',ax2)
    text(datenum([yr_sel mo_sel 1]),5.1,['\theta(z = -' num2str(dep_sel) 'm, ' datestr(datenum([yr_sel mo_sel 1]),'mmmm yyyy') ')'],...
        'fontweight','bold')
    text(datenum([yr_sel mo_sel 1]),4.9,'\bf(a)\rm \theta vs.\it t')
    set(gcf,'currentaxes',ax1)
    text(-28,28,'\bf(c)\rm \theta vs. (\itx,y\rm )')
    set(gcf,'currentaxes',ax3)
    text(datenum([yr_sel mo_sel 1]),29,'\bf(b)\rm Sample (\itx,\color{gray}y\color{black}\rm ) vs.\it t')
    ylabel(ax3,'km')
    ylabel(ax2,'\circC')
    grid(ax3,'on')
    grid(ax2,'on')
    set(ax2,'ytick',[4:0.25:5])
    lg1 = legend(ax2,'$$\theta$$','$$\hat{\theta} = A + B x + C y + D t^{\prime} + E t^{\prime 2}$$');
    set(lg1,'interpreter','latex','position',[0.5405 0.9485 0.4401 0.0472])
    caxis(ax1,[4 5])
    cb1 = axes('units','inches','position',[2.6 3.8 1 0.1]);
    set(gcf,'currentaxes',cb1)
    cf1 = contourf([0 1;0 1]*1+4,[0 0; 1 1],[0 1;0 1]*1+4,64,'edgecolor','none');
    set(cb1,'xlim',[4 5],'xtick',4:0.25:5,'yticklabel','','xaxislocation','top','xticklabelrotation',90)
    xlabel('\circC')
    shading(cb1,'flat')
        
    % set figure position for printing
    getpos = get(gcf,'position');
    set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)])
    
%% RECREATE top panel of Fig. 12 in Pelland/Eriksen/Cronin [2016]

close all

% define monthly bins
bin_cent_vec = [2008 6 15;
            2008 7 15;
            2008 8 15;
            2008 9 15;
            2008 10 15;
            2008 11 15;
            2008 12 15;
            2009 1 15;
            2009 2 15;
            2009 3 15;
            2009 4 15;
            2009 5 15;
            2009 6 15;
            2009 7 15;
            2009 8 15;
            2009 9 15;
            2009 10 15;
            2009 11 15;
            2009 12 15;
            2010 1 15];
        bin_cent = datenum(bin_cent_vec)';
        bin_bounds = [datenum([bin_cent_vec(:,1:2) ones(size(bin_cent_vec(:,1)))]) ...
            datenum([bin_cent_vec(:,1) bin_cent_vec(:,2)+1 ones(size(bin_cent_vec(:,1)))])];
        bin_bounds(end,2) = datenum([2010 1 21]); % date glider passed 30 km from center of array
        bin_bounds(1,1) = min(data_mat(:,3)); % beginning of first deployment
        bin_cent(1) = mean(bin_bounds(1,:)); % redefine bin center time based on altered bounds in 1st/last month
        bin_cent(end) = mean(bin_bounds(end,:));

% create figure
figure('units','inches','position',[1 1 6 2]);
ax1 = axes('units','inches','position',[0.6 0.6 5 1]);
set(ax1,'xlim',[bin_cent(1)-21 bin_cent(end)+21])
this_xl = get(ax1,'xlim');
y_diff = diff(this_xl)*1/5;
set(ax1,'ylim',[-y_diff/2 y_diff/2]);
hold(ax1,'on')
scale_fac = 8e2;
line(this_xl,[0 0],'color',ones(1,3)*0.7)
% loop on monthly bins
for bci = 1:length(bin_cent)
    this_ind = dac_tot(:,2) > bin_bounds(bci,1) & dac_tot(:,2) < bin_bounds(bci,2);
    this_u = nanmean(dac_tot(this_ind,5));
    this_v = nanmean(dac_tot(this_ind,6));
    
    line([0 this_u]*scale_fac+bin_cent(bci),[0 this_v]*scale_fac,'color',nicecolor('r'),'linewidth',1);
    
    del_phi = 10/180*pi;
    this_phi = atan(this_v/this_u);
    if this_u >= 0
        this_phi = this_phi + pi;
    end
    tri_edge = 10;
    end_x = this_u*scale_fac + bin_cent(bci);
    end_y = this_v*scale_fac;
    patch_x = [0 tri_edge*cos(this_phi+del_phi) tri_edge*cos(this_phi-del_phi)]+end_x;
    patch_y = [0 tri_edge*sin(this_phi+del_phi) tri_edge*sin(this_phi-del_phi)]+end_y;
    patch_id = patch(patch_x,patch_y,zeros(size(patch_x)),'facecolor','r','edgecolor','none','clipping','off');
end

% date this axis by month
dac_t_vec = datevec(dac_tot(:,2));
unq_mo_dac = unique(dac_t_vec(:,1:2),'rows');
xtick_vec = datenum([unq_mo_dac ones(length(unq_mo_dac(:,1)),1)]);
set(gca,'xtick',xtick_vec,'xticklabel','','ytick',[],'ycolor','none')
for uqi = 1:length(unq_mo_dac(1:end-3,1))
    text(datenum([unq_mo_dac(uqi,:) 11]),-y_diff/2-10,datestr(datenum([unq_mo_dac(uqi,:) 1]),'m'))
end
    
% add year annotations
x1 = datenum([2009 1 1]);
line(ones(1,2)*x1,[-80 -110],'color','k','clipping','off')
text(datenum([2008 9 7]),-90,'2008')
text(datenum([2009 7 15]),-90,'2009')
x1 = datenum([2010 1 1]);
line(ones(1,2)*x1,[-80 -110],'color','k','clipping','off')
text(datenum([2008 7 1]),50,'Monthly-Average DAC','color','r','fontweight','bold')

% plot scale arrow
y_end = 0.05*scale_fac+20;
patch_x = [-5 0 0]+datenum([2009 7 1]);
patch_y = [-15 -15 0]+y_end;
patch_z = zeros(size(patch_x));
patch(patch_x,patch_y,patch_z,'facecolor','k','edgecolor','k')
line([0 0]+datenum([2009 7 1]),[20 y_end],'color','k','linewidth',1)
text(datenum([2009 7 1])+10,(y_end-20)/2+20,'N [5 cm s^{-1}]','color','k','fontsize',10)

    % set figure position for printing
    getpos = get(gcf,'position');
    set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)])
    
%% Create figure similar to FIGURE S1 in Pelland/Eriksen/Cronin [2016] (takes 30 sec or so)

close all
figure('units','inches','position',[1 1 6 6])
% line P crossing for SG144 in deployment 3 begins in cycle 660
line_p_xing_start_ind = find(data_mat(:,1) == 2660,1,'first');
% find unique casts prior to Line P departure
unq_casts = unique(data_mat(1:line_p_xing_start_ind-1,1:2),'rows');

ten_pct_complete = 0;
fprintf(['T-S plot, plotting casts with and without transition layer interpolation.\n'])
fprintf(['     50   100 [pct complete]\n'])
fprintf(['     |    |\n'])
tot_handl = zeros(size(unq_casts,1),2)*NaN;
% loop on casts
for uqi = 1:length(unq_casts(:,1))
    these_rows = data_mat(:,1) == unq_casts(uqi,1) & data_mat(:,2) == unq_casts(uqi,2);
    this_h_without = line(data_mat(these_rows,8),data_mat(these_rows,7),'color',ones(1,3)*0.7); % here plotting T vs. S, 
    % where S has not been interpolated in transition layer
    this_h_with = line(data_mat(these_rows,10),data_mat(these_rows,7),'color',ones(1,3)*0.2); % here plotting T vs. S, 
    % where S HAS been interpolated in transition layer
    
    % store plotting handles for later re-arrangement
    tot_handl(uqi,:) = [this_h_without this_h_with];
    
    new_pct_complete = floor(10*uqi/length(unq_casts(:,1)));
    if new_pct_complete > ten_pct_complete
        ten_pct_complete = new_pct_complete;
        fprintf('=')
        if new_pct_complete == 10
            fprintf('\n')
        end
    end
end
% set axes children such that cycles with interpolation are shown on top
set(gca,'children',[tot_handl(:,2); tot_handl(:,1)]);
xlabel('Salinity')
ylabel('\itin situ \rmTemperature [\circC]')
grid on
legend([tot_handl(1,1) tot_handl(1,2)],'No transition layer interpolation',...
    'With transition layer interpolation*')
title('T-S Diagram, Overall, SG Surveys at OSP')
text(34,12,{'*as described in';'Pelland/Eriksen/Cronin [2016]';'and Pelland [2015]'})

% set figure position for printing
getpos = get(gcf,'position');
set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)])

%% Recreate Fig. 9 of Pelland/Eriksen/Cronin [2016] (also takes a few seconds)

close all
% find unique casts prior to 1 Feb
unq_casts = unique(data_mat(data_mat(:,3) < datenum([2010 2 1]),1:2),'rows');

% set isopycnals to which data will be interpolated
iso_interp = [26 26.2 26.5]';
% pre-allocate
o2_iso = zeros(size(unq_casts,1),length(iso_interp))*NaN;
theta_iso = o2_iso;
t_iso = o2_iso;
% postcal o2 column ind
o2_postcal_col = find(strcmp(bin_var_names,'o2_postcal'));
% loop on unique casts
for uqi = 1:length(unq_casts(:,1))
    % rows for this cast
    this_cast_ind = data_mat(:,1) == unq_casts(uqi,1) & data_mat(:,2) == unq_casts(uqi,2);
    
    this_cast_o2 = data_mat(this_cast_ind,o2_postcal_col); % o2 postcalibrated after comparison to bottle samples at OSP
    this_cast_pdens = data_mat(this_cast_ind,12); % sigma-theta
    this_cast_theta = data_mat(this_cast_ind,11); % theta
    this_cast_t = data_mat(this_cast_ind,3); % time
    good_ind = ~isnan(this_cast_pdens);
    % interpolate to selected isopycnals
    if sum(good_ind) > 2
        o2_iso(uqi,:) = interp1(this_cast_pdens(good_ind),this_cast_o2(good_ind),iso_interp);
        theta_iso(uqi,:) = interp1(this_cast_pdens(good_ind),this_cast_theta(good_ind),iso_interp);
        t_iso(uqi,:) = interp1(this_cast_pdens(good_ind),this_cast_t(good_ind),iso_interp);
    end
    
end

% cycle-average o2, in an attempt to average out the opposite effects of optode lag on the
% upcast/downcast
unq_cycs = unique(unq_casts(:,1));
cyc_avg_o2_theta_t = zeros(size(unq_cycs,1),9)*NaN;
for uqi = 1:size(unq_cycs,1)
    these_rows = unq_casts(:,1) == unq_cycs(uqi);
    cyc_avg_o2_theta_t(uqi,1:3) = nanmean(o2_iso(these_rows,:),1);
    cyc_avg_o2_theta_t(uqi,4:6) = nanmean(theta_iso(these_rows,:),1);
    cyc_avg_o2_theta_t(uqi,7:9) = nanmean(t_iso(these_rows,:),1);
end

% daily-average the cycle-averages
floor_t_iso = floor(cyc_avg_o2_theta_t(:,7:9));
unq_days = unique(floor_t_iso(:));
day_avg_o2 = zeros(length(unq_days),3)*NaN;
day_avg_theta = day_avg_o2;

for iso_i = 1:length(iso_interp)
    this_t = floor_t_iso(:,iso_i);    
    this_o2 = cyc_avg_o2_theta_t(:,iso_i);
    this_theta = cyc_avg_o2_theta_t(:,iso_i+length(iso_interp));
    for uqi = 1:length(unq_days)
        these_rows = this_t == unq_days(uqi);
        day_avg_o2(uqi,iso_i) = nanmean(this_o2(these_rows));
        day_avg_theta(uqi,iso_i) = nanmean(this_theta(these_rows));
    end
end

% create figure
figure('units','inches','position',[1 1 4 10.8])
ax3 = axes('units','inches','position',[0.7 0.6 3 3]);
ax2 = axes('units','inches','position',[0.7 4 3 3]);
ax1 = axes('units','inches','position',[0.7 7.4 3 3]);
ax_iso = [ax1 ax2 ax3];
iso_ylim = [265 315;
    240 290;
    185 235];
iso_text = {['\bf(a) \sigma_{\theta} = ' num2str(iso_interp(1))];
    ['\bf(b) \sigma_{\theta} = ' num2str(iso_interp(2))];
    ['\bf(c) \sigma_{\theta} = ' num2str(iso_interp(3))]};
for iso_i = 1:length(iso_interp)
    set(gcf,'currentaxes',ax_iso(iso_i))
    line(day_avg_theta(:,iso_i),day_avg_o2(:,iso_i),'marker','o','markerfacecolor','none',...
        'markeredgecolor','k','linestyle','none')
    grid on
    set(gca,'ylim',iso_ylim(iso_i,:),'xlim',[4 6],'ytick',iso_ylim(iso_i,1):5:iso_ylim(iso_i,2))
    % find good data on this isopycnal
    good_ind = ~isnan(day_avg_theta(:,iso_i)) & ~isnan(day_avg_o2(:,iso_i));
    % perform linear regression of o2 vs. theta on this isopycnal
    x_tot = day_avg_theta(good_ind,iso_i);
    y_tot = day_avg_o2(good_ind,iso_i);
    y_prim = y_tot - mean(y_tot);
    x_prim = x_tot - mean(x_tot);
    covxy = sum(y_prim.*x_prim)/length(x_prim);
    varx = sum(x_prim.*x_prim)/length(x_prim);
    a1 = covxy/varx;
    a0 = mean(y_tot) - a1*mean(x_tot);
    r_val = sum(y_prim.*x_prim)/sqrt(sum(x_prim.^2)*sum(y_prim.^2));
    regr_x = [4 6];
    regr_y = a1*regr_x + a0;
    line(regr_x,regr_y,'color','r','linestyle','--')
    text(5.2,0.2*diff(iso_ylim(iso_i,:))+iso_ylim(iso_i,1),['r^2 = ' num2str(r_val^2,'%1.2f')],'color','r')
    text(4.1,0.94*diff(iso_ylim(iso_i,:))+iso_ylim(iso_i,1),iso_text{iso_i})
    ylabel('[O_2] [\mumol kg^{-1}]')
    xlabel('\theta [\circC]')
end

% set figure position for printing
getpos = get(gcf,'position');
set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)])

%% Figure 1 of Pelland et al. [in prep]
% uses "suncycle.m"
% http://mooring.ucsd.edu/software/matlab/doc/toolbox/geo/suncycle.html

close all

% load spreadsheet with ML-average of Winkler o2 samples from ship visits to OSP
cal_sheet = readtable([o2_crosscal_sprdsht_dir 'Pelland_et_al_SG_Surveys_III_Winkler_O2_Samples_at_OSP_2008_09.csv']);

% postcal o2 column indices
o2_postcal_col = find(strcmp(bin_var_names,'o2_postcal'));
o2_cstar_col = find(strcmp(bin_var_names,'o2_sat'));
o2_c_over_cstar_col = find(strcmp(bin_var_names,'o2_sat_frac_postcal'));
b_bp_red_col = find(strcmp(bin_var_names,'b_bp_700nm'));
chl_approx_col = find(strcmp(bin_var_names,'rel_chl_a_fluor_channel'));

% perform daily-averaging of o2, optical data at 10m depth
t_10m = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),3);
floor_t_10m = floor(t_10m);
day_grid = min(floor_t_10m):max(floor_t_10m);
o2_c_postcal = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),o2_postcal_col);
o2_c_over_cstar_postcal = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),o2_c_over_cstar_col);
o2_cstar = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),o2_cstar_col);
b_bp_red = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),b_bp_red_col);
chl_a_approx = data_mat(data_mat(:,6) == 10 & data_mat(:,3) < datenum([2010 2 1]),chl_approx_col);
o2_c_over_cstar_10m_daily_avg = zeros(size(day_grid))*NaN;
o2_c_10m_daily_avg = zeros(size(day_grid))*NaN;
o2_cstar_10m_daily_avg = zeros(size(day_grid))*NaN;
b_bp_red_daily_avg = zeros(size(day_grid))*NaN;
chl_a_approx_daily_avg = zeros(size(day_grid))*NaN;
for dgi = 1:length(day_grid)
    this_ind = floor_t_10m == day_grid(dgi);
    o2_cstar_10m_daily_avg(dgi) = nanmean(o2_cstar(this_ind));
    o2_c_10m_daily_avg(dgi) = nanmean(o2_c_postcal(this_ind));
    o2_c_over_cstar_10m_daily_avg(dgi) = nanmean(o2_c_over_cstar_postcal(this_ind));
    b_bp_red_daily_avg(dgi) = nanmean(b_bp_red(this_ind));
    % night-only obs for chl a
    this_rise_and_set = suncycle(50,215,day_grid(dgi));
    this_t = (t_10m(this_ind) - day_grid(dgi))*24; % decimal hours: units output by suncycle.m
    in_daylight = this_t < this_rise_and_set(2) | this_t > this_rise_and_set(1); % note that suncycle outputs are in GMT/UTC
    in_night = ~in_daylight;
    this_chl = chl_a_approx(this_ind);
    chl_a_approx_daily_avg(dgi) = nanmean(this_chl(in_night));
end

f1 = figure('units','inches','position',[1 1 8.5 5.7]);
ax2 = axes('units','inches','position',[0.8 2 7 3.5]);
axsat = axes('units','inches','position',[0.8 0.6 7 1]);
line([datenum([2008 6 1]) datenum([2010 2 1])],[0 0],'color','k','linestyle','--')
line(day_grid,100*(o2_c_over_cstar_10m_daily_avg-1),'linewidth',2,'color','k')
    
for dpli = 1:3
    figure(f1)
    set(gcf,'currentaxes',ax2)
    pt1_i = line(day_grid,o2_cstar_10m_daily_avg,'color',ones(1,3)*0.7,'linewidth',2);
    pt2_i = line(day_grid,o2_c_10m_daily_avg,'color','k','linewidth',2);
    this_ind = deployment == dpli;
    start_time = min(data_mat(this_ind,3));
    end_time = max(data_mat(this_ind,3));
    line([start_time end_time],[0 0]+252,'color','k','linewidth',1)
    line([start_time start_time],[-2 2]+252,'color','k','linewidth',1)
    line([end_time end_time],[-2 2]+252,'color','k','linewidth',1)
    text(mean([start_time end_time])-20,255,['Deployment ' num2str(dpli)],'fontsize',7)
    
end
set(ax2,'xlim',[datenum([2008 6 0]) datenum([2010 2 0])])
set(axsat,'xlim',[datenum([2008 6 0]) datenum([2010 2 0])],'ylim',[-2 12])
set(gcf,'currentaxes',ax2)
tp1 = line(datenum(cal_sheet.Cast_Date_Time_UTC),cal_sheet.ML_avg_O2_Concentration_mumol_per_kg,'marker','^','markerfacecolor',...
    'g','markeredgecolor','k','linestyle','none');


% date this axis by month
day_grid_vec = datevec(day_grid);
unq_mo = unique(day_grid_vec(:,1:2),'rows');
xtick_vec = datenum([unq_mo ones(length(unq_mo(:,1)),1)]);
set(ax2,'xtick',xtick_vec,'xticklabel','')
for uqi = 1:length(unq_mo(:,1))
    text(datenum([unq_mo(uqi,:) 11]),248,datestr(datenum([unq_mo(uqi,:) 1]),'m'))
end
    
% add year annotations
set(ax2,'ylim',[250 330])
x1 = datenum([2009 1 1]);
line(ones(1,2)*x1,[247 242],'color','k','clipping','off')
text(datenum([2008 9 7]),244,'2008')
text(datenum([2009 7 15]),244,'2009')
x1 = datenum([2010 1 1]);
line(ones(1,2)*x1,[247 242],'color','k','clipping','off')

set(ax2,'xticklabel','')
text(datenum([2008 6 5]),328,'\bf(a)\rm Oxygen concentration')
ylabel('[O_2] [\mumol kg^{-1}]')
grid(ax2,'on')
grid(axsat,'on');


% mod figure to add b_bp/"chl a"
set(ax2,'units','inches')
set(axsat,'units','inches')
getpos2 = get(ax2,'position');
getpossat = get(axsat,'position');
getposfig = get(gcf,'position');

set(gcf,'position',[getposfig(1:3) getposfig(4)+1.5])
set(ax2,'position',[getpos2(1) getpos2(2)+1.5 getpos2(3:4)])
set(axsat,'position',[getpossat(1:3) getpossat(4)+1.5])
set(axsat,'ylim',[-2 12],'ytick',[-2:2:12])
getpossat = get(axsat,'position');

set(gcf,'currentaxes',axsat)
hold(axsat,'on')
% August 11 2008: Hamme et al. 2010 GRL p.3 http://dx.doi.org/10.1029/2010GL044629
line(ones(1,2)*datenum([2008 8 11]),[-1 9],'color',[0 0.7 0],'linestyle',':')
line(day_grid,b_bp_red_daily_avg*10^3,'color','r')
line(day_grid,chl_a_approx_daily_avg,'color','b','clipping','off')

this_child = get(axsat,'children');
set(axsat,'children',[this_child(3:end); this_child(1:2)])

text(datenum([2009 10 10]),7,'b_{bp} [m^{-1} \times 10^{-3}]','color','r')
text(datenum([2009 10 10]),5,'chl \ita\rm [mg m^{-3}]','color','b')
text(datenum([2009 10 10]),9,'([O_{2}]/[O_{2}]_{sat} - 1)\times100 [%]')
text(datenum([2008 6 5]),11.2,'\bf(b)\rm Supersaturation and optical properties')
set(axsat,'color','none')

% date this axis by month
set(axsat,'xtick',xtick_vec,'xticklabel','')
for uqi = 1:length(unq_mo(:,1))
    text(datenum([unq_mo(uqi,:) 11]),-2.5,datestr(datenum([unq_mo(uqi,:) 1]),'m'))
end
    
% add year annotations
x1 = datenum([2009 1 1]);
line(ones(1,2)*x1,[-3 -4.2],'color','k','clipping','off')
text(datenum([2008 9 7]),-3.5,'2008')
text(datenum([2009 7 15]),-3.5,'2009')
x1 = datenum([2010 1 1]);
line(ones(1,2)*x1,[-3 -4.2],'color','k','clipping','off')

tp1 = line(datenum(cal_sheet.Cast_Date_Time_UTC),cal_sheet.ML_avg_Pct_Supersat,'marker','^','markerfacecolor',...
    'g','markeredgecolor','k','linestyle','none');

set(gcf,'currentaxes',ax2)
% August 11 2008: Hamme et al. 2010 GRL p.3 http://dx.doi.org/10.1029/2010GL044629
line(ones(1,2)*datenum([2008 8 11]),[262 296],'color',[0 0.7 0],'linestyle',':')
lg1 = legend(ax2,[pt1_i pt2_i tp1],'[O_{2}]_{sat} (z = -10 m)','[O_{2}] (z = -10 m)','[O_2] (Bottle Samples)');
text(datenum([2008 8 15]),298,{'Ash Deposition'},'color',[0 0.7 0],'backgroundcolor','w',...
    'fontsize',8)

% set figure position for printing
getpos = get(gcf,'position');
set(gcf,'papersize',getpos(3:4),'paperposition',[0 0 getpos(3:4)])
